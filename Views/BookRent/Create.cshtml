@model BookRental.ViewModel.BookRentalViewModel
@using BookRental.Utility
@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3>Add New Book Rental</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @*Email*@
        <div class="form-group">
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.email, new { id = "email", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        @*Tittle*@
        <div class="form-group">
            @Html.LabelFor(model => model.tittle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.tittle, new { id = "tittle", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.tittle, "", new { @class = "text-danger" })
            </div>
        </div>

        @*ISBN*@
        <div class="form-group">
            @Html.LabelFor(model => model.ISBN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ISBN, new { id = "isbn", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ISBN, "", new { @class = "text-danger" })
            </div>
        </div>


        @{
            List<SelectListItem> listItems = new List<SelectListItem>();
            listItems.Add(new SelectListItem
            {
                Text = SD.oneMonth,
                Value = SD.oneMonthCount
            });
            listItems.Add(new SelectListItem
            {
                Text = SD.sixMonth,
                Value = SD.sixMonthCount
            });
        }

        @*Rental Duration*@
        <div class="form-group">
            @Html.LabelFor(model => model.rentalDuration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.rentalDuration, listItems, new { id = "RentalDuration", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.rentalDuration, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="nameAndDob">
            @*Full Name*@
            <div class="form-group">
                @Html.LabelFor(model => model.completeName, "Full Name",htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Label("", new { id = "completeName", @class = "form-control w-3" })
                </div>
            </div>

            @*Birth Date*@
            <div class="form-group">
                @Html.LabelFor(model => model.bdate, "Birth Date",htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Label("", new { id = "bdate", @class = "form-control w-3" })
                </div>
            </div>

            @*Rental Price*@
            <div class="form-group">
                @Html.LabelFor(model => model.rentalPrice, "Rental Price",htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Label("", new { id = "rentalPrice", @class = "form-control w-3" })
                </div>
            </div>

            @*Availability*@
            <div class="form-group">
                @Html.LabelFor(model => model.availability, "Availability",htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Label("", new { id = "availability", @class = "form-control w-3" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="offset-md-2 col-md-10">
                <input type="button" id="btnAvailability" value="Check Availability" class="btn btn-sm btn-primary" />
                <input type="button" id="btnSubmit" value="Reserve" class="btn btn-sm btn-primary d-none" />
            </div>
        </div>
    </div>
}

@section scripts{

    <script>
        //Email
        $(document).ready(function () {
            // constructs the suggestion engine
            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('email'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/API/UsersAPI?type=email&query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#email').typeahead({
                highlight: true,
                minLength: 3
            },
                {
                    name: 'customers',
                    display: 'Email',
                    source: customers
                });

            //Tittle
            var tittle = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('tittle'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/API/UsersAPI?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#tittle').typeahead({
                highlight: true,
                minLength: 3
            },
                {
                    name: 'tittle',
                    display: 'Tittle',
                    source: tittle
                });
        });

        $('#btnAvailability').click(function () {
            var ISBN = document.getElementById("isbn").value;
            var email = document.getElementById("email").value;
            var rentalDuration = document.getElementById("RentalDuration").value;

            $.ajax({
                url: '/api/BookApi?type=avail&ISBN=' + ISBN,
                type: 'GET',
                dataType: 'Json',
                success: function (data, textStatus, xhr) {
                    $('#availability').text(data + ' available')
                    if (data > 0) {
                        document.getElementById('btnSubmit').style.display = '';
                    }
                    else {
                        document.getElementById('btnSubmit').style.display = '';
                        document.getElementById('btnSubmit').value = 'Not Available';
                        document.getElementById('btnSubmit').disabled = true;
                        document.getElementById('btnSubmit').classList.remove = 'btn-success';
                        document.getElementById('btnSubmit').classList.add = 'btn-danger';
                    }
                },
                error: function (xhr, textStatus, errorThrown) {

                }
            });

            $.ajax({
                url: '/api/BookApi?type=price&ISBN=' + ISBN + '&rentalDuration=' + rentalDuration + '&email=' + email,
                type: 'GET',
                dataType: 'Json',
                success: function (data, textStatus, xhr) {
                    $('#rentalPrice').text(data);
                },
                error: function (xhr, textStatus, errorThrown) {
                }
            });


            $.ajax({
                url: '/api/UsersApi?type=name&isbn=&query=' + email,
                type: 'GET',
                dataType: 'Json',
                success: function (data, textStatus, xhr) {
                    var fields = data.split(';');
                    $('#fname').text(fields[0])

                    var bdate = fields[1].split(' ')
                    $('#bdate').text(bdate[0])
                    document.getElementById("btnAvailability").style.display = 'none';
                    document.getElementById("nameAndDob").style.display = '';
                },
                error: function (xhr, textStatus, errorThrown) {
                }
            });



        });
    </script>
}